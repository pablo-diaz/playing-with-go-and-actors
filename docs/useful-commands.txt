go mod init ej01

k6 run get-album-by-id.js -c config-scenarios.json

./k6 run --out 'dashboard=period=3s' ~/ejercicios/k6/google-test.js

~/xk6/k6-with-dashboard/k6 run --out 'dashboard=period=3s' get-album-by-id.js

http://localhost:5665
http://localhost:5665/ui/?endpoint=/

DATABASE_URL="host=localhost user=recordstoredbo password=rsdbo dbname=recordstore port=5432 sslmode=disable TimeZone=America/Bogota" GIN_MODE=release ON_HOST=172.19.80.49 ./album-manager-web-service

GIN_MODE=release go run main.go > load-tests/server-logs-01 2>load-tests/server-errors-01

GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -trimpath -o album-manager-web-service .

------------------------------------------------------------------------------------------------------------

docker run -d --name pg -p 5432:5432 --env-file ./setup/postgres/docker-env-vars -v $(pwd)/setup/postgres/init-scripts:/docker-entrypoint-initdb.d postgres:16.3

podman run -d --name pg -p 5432:5432 --env-file ./setup/postgres/docker-env-vars -v ./setup/postgres/init-scripts:/docker-entrypoint-initdb.d --security-opt label=disable postgres:16.3

docker exec -it pg bash

psql --username recordstoredbo --dbname recordstore

select * from albums;

curl http://localhost:8080/albums

curl http://localhost:8080/albums/new/al01

curl -X POST -H "Content-Type: application/json" -d '{"id": "al01", "title": "Album 01", "artist": "Artist 01", "price": "USD$15.99"}' http://localhost:8080/albums

curl -s http://localhost:8080/debug/vars | grep _inbox_channel_length
